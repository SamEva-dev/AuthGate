name: deploy-dev
on:
  push:
    branches: [ main ]        # ou feature/dev
  workflow_dispatch:

env:
  IMAGE_NAME: authgate/auth   # repo ACR (ex: authgate/auth)
  IMAGE_TAG: dev-${{ github.sha }}

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    environment: dev   # ðŸ”’ lie ce job Ã  l'env GitHub "dev"
    permissions:
      id-token: write  # OIDC
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: ACR login (via Azure CLI context)
        run: az acr login --name ${{ secrets.ACR_LOGIN_SERVER }}

      - name: Build & push image to ACR
        uses: docker/build-push-action@v6
        with:
          context: ./src/AuthGate.Auth
          file: ./src/AuthGate.Auth/Dockerfile
          push: true
          platforms: linux/amd64   # tu peux ajouter arm64 plus tard
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:dev-latest

      - name: Azure CLI - deploy to Container Apps
        uses: azure/cli@v2
        with:
          inlineScript: |
            az extension add --name containerapp --upgrade
            az containerapp update \
              --name ${{ secrets.CONTAINERAPP_NAME }} \
              --resource-group ${{ secrets.RESOURCE_GROUP }} \
              --image ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              --set-env-vars ASPNETCORE_URLS=http://+:8080

      - name: Show public URL
        uses: azure/cli@v2
        with:
          inlineScript: |
            FQDN=$(az containerapp show -g ${{ secrets.RESOURCE_GROUP }} -n ${{ secrets.CONTAINERAPP_NAME }} --query properties.configuration.ingress.fqdn -o tsv)
            echo "App URL: https://$FQDN"
